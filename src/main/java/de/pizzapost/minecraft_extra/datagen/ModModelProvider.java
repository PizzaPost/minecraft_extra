package de.pizzapost.minecraft_extra.datagen;

import de.pizzapost.minecraft_extra.block.ModBlocks;
import de.pizzapost.minecraft_extra.block.custom.HoneyBerryBushBlock;
import de.pizzapost.minecraft_extra.item.ModArmorMaterials;
import de.pizzapost.minecraft_extra.item.ModItems;
import net.fabricmc.fabric.api.client.datagen.v1.provider.FabricModelProvider;
import net.fabricmc.fabric.api.datagen.v1.FabricDataOutput;
import net.minecraft.block.Blocks;
import net.minecraft.client.data.BlockStateModelGenerator;
import net.minecraft.client.data.ItemModelGenerator;
import net.minecraft.client.data.Models;

public class ModModelProvider extends FabricModelProvider {
    public ModModelProvider(FabricDataOutput output) {
        super(output);
    }

    @Override
    public void generateBlockStateModels(BlockStateModelGenerator blockStateModelGenerator) {
        blockStateModelGenerator.registerSimpleCubeAll(ModBlocks.XP_STORAGE);
        blockStateModelGenerator.registerSimpleCubeAll(ModBlocks.CHISELED_FLINT_BRICKS);
        BlockStateModelGenerator.BlockTexturePool flintBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(ModBlocks.FLINT_BLOCK);
        BlockStateModelGenerator.BlockTexturePool flintBrickBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(ModBlocks.FLINT_BRICKS);
        BlockStateModelGenerator.BlockTexturePool whiteWoolBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.WHITE_WOOL);
        BlockStateModelGenerator.BlockTexturePool lightGrayWoolBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.LIGHT_GRAY_WOOL);
        BlockStateModelGenerator.BlockTexturePool grayWoolBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.GRAY_WOOL);
        BlockStateModelGenerator.BlockTexturePool blackWoolBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.BLACK_WOOL);
        BlockStateModelGenerator.BlockTexturePool brownWoolBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.BROWN_WOOL);
        BlockStateModelGenerator.BlockTexturePool redWoolBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.RED_WOOL);
        BlockStateModelGenerator.BlockTexturePool orangeWoolBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.ORANGE_WOOL);
        BlockStateModelGenerator.BlockTexturePool yellowWoolBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.YELLOW_WOOL);
        BlockStateModelGenerator.BlockTexturePool limeWoolBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.LIME_WOOL);
        BlockStateModelGenerator.BlockTexturePool greenWoolBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.GREEN_WOOL);
        BlockStateModelGenerator.BlockTexturePool cyanWoolBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.CYAN_WOOL);
        BlockStateModelGenerator.BlockTexturePool lightBlueWoolBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.LIGHT_BLUE_WOOL);
        BlockStateModelGenerator.BlockTexturePool blueWoolBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.BLUE_WOOL);
        BlockStateModelGenerator.BlockTexturePool purpleWoolBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.PURPLE_WOOL);
        BlockStateModelGenerator.BlockTexturePool magentaWoolBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.MAGENTA_WOOL);
        BlockStateModelGenerator.BlockTexturePool pinkWoolBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.PINK_WOOL);
        BlockStateModelGenerator.BlockTexturePool terracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool whiteTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.WHITE_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool lightGrayTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.LIGHT_GRAY_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool grayTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.GRAY_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool blackTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.BLACK_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool brownTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.BROWN_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool redTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.RED_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool orangeTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.ORANGE_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool yellowTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.YELLOW_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool limeTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.LIME_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool greenTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.GREEN_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool cyanTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.CYAN_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool lightBlueTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.LIGHT_BLUE_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool blueTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.BLUE_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool purpleTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.PURPLE_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool magentaTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.MAGENTA_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool pinkTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.PINK_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool whiteGlazedTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.WHITE_GLAZED_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool lightGrayGlazedTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.LIGHT_GRAY_GLAZED_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool grayGlazedTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.GRAY_GLAZED_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool blackGlazedTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.BLACK_GLAZED_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool brownGlazedTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.BROWN_GLAZED_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool redGlazedTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.RED_GLAZED_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool orangeGlazedTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.ORANGE_GLAZED_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool yellowGlazedTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.YELLOW_GLAZED_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool limeGlazedTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.LIME_GLAZED_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool greenGlazedTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.GREEN_GLAZED_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool cyanGlazedTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.CYAN_GLAZED_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool lightBlueGlazedTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.LIGHT_BLUE_GLAZED_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool blueGlazedTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.BLUE_GLAZED_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool purpleGlazedTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.PURPLE_GLAZED_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool magentaGlazedTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.MAGENTA_GLAZED_TERRACOTTA);
        BlockStateModelGenerator.BlockTexturePool pinkGlazedTerracottaBlockPool = blockStateModelGenerator.registerCubeAllModelTexturePool(Blocks.PINK_GLAZED_TERRACOTTA);
        flintBlockPool.slab(ModBlocks.FLINT_SLAB);
        flintBlockPool.stairs(ModBlocks.FLINT_STAIR);
        flintBlockPool.wall(ModBlocks.FLINT_WALL);
        flintBrickBlockPool.slab(ModBlocks.FLINT_BRICK_SLAB);
        flintBrickBlockPool.stairs(ModBlocks.FLINT_BRICK_STAIR);
        flintBrickBlockPool.wall(ModBlocks.FLINT_BRICK_WALL);
        blockStateModelGenerator.registerSimpleCubeAll(ModBlocks.FEATHER_BLOCK);
        blockStateModelGenerator.registerTintableCrossBlockStateWithStages(ModBlocks.HONEY_BERRY_BUSH, BlockStateModelGenerator.CrossType.NOT_TINTED, HoneyBerryBushBlock.AGE, 0, 1, 2, 3);
        blockStateModelGenerator.registerSimpleCubeAll(ModBlocks.PIZZAPOST_BLOCK);
        whiteWoolBlockPool.slab(ModBlocks.WHITE_WOOL_SLAB);
        whiteWoolBlockPool.stairs(ModBlocks.WHITE_WOOL_STAIR);
        whiteWoolBlockPool.wall(ModBlocks.WHITE_WOOL_WALL);
        lightGrayWoolBlockPool.slab(ModBlocks.LIGHT_GRAY_WOOL_SLAB);
        lightGrayWoolBlockPool.stairs(ModBlocks.LIGHT_GRAY_WOOL_STAIR);
        lightGrayWoolBlockPool.wall(ModBlocks.LIGHT_GRAY_WOOL_WALL);
        grayWoolBlockPool.slab(ModBlocks.GRAY_WOOL_SLAB);
        grayWoolBlockPool.stairs(ModBlocks.GRAY_WOOL_STAIR);
        grayWoolBlockPool.wall(ModBlocks.GRAY_WOOL_WALL);
        blackWoolBlockPool.slab(ModBlocks.BLACK_WOOL_SLAB);
        blackWoolBlockPool.stairs(ModBlocks.BLACK_WOOL_STAIR);
        blackWoolBlockPool.wall(ModBlocks.BLACK_WOOL_WALL);
        brownWoolBlockPool.slab(ModBlocks.BROWN_WOOL_SLAB);
        brownWoolBlockPool.stairs(ModBlocks.BROWN_WOOL_STAIR);
        brownWoolBlockPool.wall(ModBlocks.BROWN_WOOL_WALL);
        redWoolBlockPool.slab(ModBlocks.RED_WOOL_SLAB);
        redWoolBlockPool.stairs(ModBlocks.RED_WOOL_STAIR);
        redWoolBlockPool.wall(ModBlocks.RED_WOOL_WALL);
        orangeWoolBlockPool.slab(ModBlocks.ORANGE_WOOL_SLAB);
        orangeWoolBlockPool.stairs(ModBlocks.ORANGE_WOOL_STAIR);
        orangeWoolBlockPool.wall(ModBlocks.ORANGE_WOOL_WALL);
        yellowWoolBlockPool.slab(ModBlocks.YELLOW_WOOL_SLAB);
        yellowWoolBlockPool.stairs(ModBlocks.YELLOW_WOOL_STAIR);
        yellowWoolBlockPool.wall(ModBlocks.YELLOW_WOOL_WALL);
        limeWoolBlockPool.slab(ModBlocks.LIME_WOOL_SLAB);
        limeWoolBlockPool.stairs(ModBlocks.LIME_WOOL_STAIR);
        limeWoolBlockPool.wall(ModBlocks.LIME_WOOL_WALL);
        greenWoolBlockPool.slab(ModBlocks.GREEN_WOOL_SLAB);
        greenWoolBlockPool.stairs(ModBlocks.GREEN_WOOL_STAIR);
        greenWoolBlockPool.wall(ModBlocks.GREEN_WOOL_WALL);
        cyanWoolBlockPool.slab(ModBlocks.CYAN_WOOL_SLAB);
        cyanWoolBlockPool.stairs(ModBlocks.CYAN_WOOL_STAIR);
        cyanWoolBlockPool.wall(ModBlocks.CYAN_WOOL_WALL);
        lightBlueWoolBlockPool.slab(ModBlocks.LIGHT_BLUE_WOOL_SLAB);
        lightBlueWoolBlockPool.stairs(ModBlocks.LIGHT_BLUE_WOOL_STAIR);
        lightBlueWoolBlockPool.wall(ModBlocks.LIGHT_BLUE_WOOL_WALL);
        blueWoolBlockPool.slab(ModBlocks.BLUE_WOOL_SLAB);
        blueWoolBlockPool.stairs(ModBlocks.BLUE_WOOL_STAIR);
        blueWoolBlockPool.wall(ModBlocks.BLUE_WOOL_WALL);
        purpleWoolBlockPool.slab(ModBlocks.PURPLE_WOOL_SLAB);
        purpleWoolBlockPool.stairs(ModBlocks.PURPLE_WOOL_STAIR);
        purpleWoolBlockPool.wall(ModBlocks.PURPLE_WOOL_WALL);
        magentaWoolBlockPool.slab(ModBlocks.MAGENTA_WOOL_SLAB);
        magentaWoolBlockPool.stairs(ModBlocks.MAGENTA_WOOL_STAIR);
        magentaWoolBlockPool.wall(ModBlocks.MAGENTA_WOOL_WALL);
        pinkWoolBlockPool.slab(ModBlocks.PINK_WOOL_SLAB);
        pinkWoolBlockPool.stairs(ModBlocks.PINK_WOOL_STAIR);
        pinkWoolBlockPool.wall(ModBlocks.PINK_WOOL_WALL);
        terracottaBlockPool.slab(ModBlocks.TERRACOTTA_SLAB);
        terracottaBlockPool.stairs(ModBlocks.TERRACOTTA_STAIR);
        terracottaBlockPool.wall(ModBlocks.TERRACOTTA_WALL);
        whiteTerracottaBlockPool.slab(ModBlocks.WHITE_TERRACOTTA_SLAB);
        whiteTerracottaBlockPool.stairs(ModBlocks.WHITE_TERRACOTTA_STAIR);
        whiteTerracottaBlockPool.wall(ModBlocks.WHITE_TERRACOTTA_WALL);
        lightGrayTerracottaBlockPool.slab(ModBlocks.LIGHT_GRAY_TERRACOTTA_SLAB);
        lightGrayTerracottaBlockPool.stairs(ModBlocks.LIGHT_GRAY_TERRACOTTA_STAIR);
        lightGrayTerracottaBlockPool.wall(ModBlocks.LIGHT_GRAY_TERRACOTTA_WALL);
        grayTerracottaBlockPool.slab(ModBlocks.GRAY_TERRACOTTA_SLAB);
        grayTerracottaBlockPool.stairs(ModBlocks.GRAY_TERRACOTTA_STAIR);
        grayTerracottaBlockPool.wall(ModBlocks.GRAY_TERRACOTTA_WALL);
        blackTerracottaBlockPool.slab(ModBlocks.BLACK_TERRACOTTA_SLAB);
        blackTerracottaBlockPool.stairs(ModBlocks.BLACK_TERRACOTTA_STAIR);
        blackTerracottaBlockPool.wall(ModBlocks.BLACK_TERRACOTTA_WALL);
        brownTerracottaBlockPool.slab(ModBlocks.BROWN_TERRACOTTA_SLAB);
        brownTerracottaBlockPool.stairs(ModBlocks.BROWN_TERRACOTTA_STAIR);
        brownTerracottaBlockPool.wall(ModBlocks.BROWN_TERRACOTTA_WALL);
        redTerracottaBlockPool.slab(ModBlocks.RED_TERRACOTTA_SLAB);
        redTerracottaBlockPool.stairs(ModBlocks.RED_TERRACOTTA_STAIR);
        redTerracottaBlockPool.wall(ModBlocks.RED_TERRACOTTA_WALL);
        orangeTerracottaBlockPool.slab(ModBlocks.ORANGE_TERRACOTTA_SLAB);
        orangeTerracottaBlockPool.stairs(ModBlocks.ORANGE_TERRACOTTA_STAIR);
        orangeTerracottaBlockPool.wall(ModBlocks.ORANGE_TERRACOTTA_WALL);
        yellowTerracottaBlockPool.slab(ModBlocks.YELLOW_TERRACOTTA_SLAB);
        yellowTerracottaBlockPool.stairs(ModBlocks.YELLOW_TERRACOTTA_STAIR);
        yellowTerracottaBlockPool.wall(ModBlocks.YELLOW_TERRACOTTA_WALL);
        limeTerracottaBlockPool.slab(ModBlocks.LIME_TERRACOTTA_SLAB);
        limeTerracottaBlockPool.stairs(ModBlocks.LIME_TERRACOTTA_STAIR);
        limeTerracottaBlockPool.wall(ModBlocks.LIME_TERRACOTTA_WALL);
        greenTerracottaBlockPool.slab(ModBlocks.GREEN_TERRACOTTA_SLAB);
        greenTerracottaBlockPool.stairs(ModBlocks.GREEN_TERRACOTTA_STAIR);
        greenTerracottaBlockPool.wall(ModBlocks.GREEN_TERRACOTTA_WALL);
        cyanTerracottaBlockPool.slab(ModBlocks.CYAN_TERRACOTTA_SLAB);
        cyanTerracottaBlockPool.stairs(ModBlocks.CYAN_TERRACOTTA_STAIR);
        cyanTerracottaBlockPool.wall(ModBlocks.CYAN_TERRACOTTA_WALL);
        lightBlueTerracottaBlockPool.slab(ModBlocks.LIGHT_BLUE_TERRACOTTA_SLAB);
        lightBlueTerracottaBlockPool.stairs(ModBlocks.LIGHT_BLUE_TERRACOTTA_STAIR);
        lightBlueTerracottaBlockPool.wall(ModBlocks.LIGHT_BLUE_TERRACOTTA_WALL);
        blueTerracottaBlockPool.slab(ModBlocks.BLUE_TERRACOTTA_SLAB);
        blueTerracottaBlockPool.stairs(ModBlocks.BLUE_TERRACOTTA_STAIR);
        blueTerracottaBlockPool.wall(ModBlocks.BLUE_TERRACOTTA_WALL);
        purpleTerracottaBlockPool.slab(ModBlocks.PURPLE_TERRACOTTA_SLAB);
        purpleTerracottaBlockPool.stairs(ModBlocks.PURPLE_TERRACOTTA_STAIR);
        purpleTerracottaBlockPool.wall(ModBlocks.PURPLE_TERRACOTTA_WALL);
        magentaTerracottaBlockPool.slab(ModBlocks.MAGENTA_TERRACOTTA_SLAB);
        magentaTerracottaBlockPool.stairs(ModBlocks.MAGENTA_TERRACOTTA_STAIR);
        magentaTerracottaBlockPool.wall(ModBlocks.MAGENTA_TERRACOTTA_WALL);
        pinkTerracottaBlockPool.slab(ModBlocks.PINK_TERRACOTTA_SLAB);
        pinkTerracottaBlockPool.stairs(ModBlocks.PINK_TERRACOTTA_STAIR);
        pinkTerracottaBlockPool.wall(ModBlocks.PINK_TERRACOTTA_WALL);
        whiteGlazedTerracottaBlockPool.slab(ModBlocks.WHITE_GLAZED_TERRACOTTA_SLAB);
        whiteGlazedTerracottaBlockPool.stairs(ModBlocks.WHITE_GLAZED_TERRACOTTA_STAIR);
        whiteGlazedTerracottaBlockPool.wall(ModBlocks.WHITE_GLAZED_TERRACOTTA_WALL);
        lightGrayGlazedTerracottaBlockPool.slab(ModBlocks.LIGHT_GRAY_GLAZED_TERRACOTTA_SLAB);
        lightGrayGlazedTerracottaBlockPool.stairs(ModBlocks.LIGHT_GRAY_GLAZED_TERRACOTTA_STAIR);
        lightGrayGlazedTerracottaBlockPool.wall(ModBlocks.LIGHT_GRAY_GLAZED_TERRACOTTA_WALL);
        grayGlazedTerracottaBlockPool.slab(ModBlocks.GRAY_GLAZED_TERRACOTTA_SLAB);
        grayGlazedTerracottaBlockPool.stairs(ModBlocks.GRAY_GLAZED_TERRACOTTA_STAIR);
        grayGlazedTerracottaBlockPool.wall(ModBlocks.GRAY_GLAZED_TERRACOTTA_WALL);
        blackGlazedTerracottaBlockPool.slab(ModBlocks.BLACK_GLAZED_TERRACOTTA_SLAB);
        blackGlazedTerracottaBlockPool.stairs(ModBlocks.BLACK_GLAZED_TERRACOTTA_STAIR);
        blackGlazedTerracottaBlockPool.wall(ModBlocks.BLACK_GLAZED_TERRACOTTA_WALL);
        brownGlazedTerracottaBlockPool.slab(ModBlocks.BROWN_GLAZED_TERRACOTTA_SLAB);
        brownGlazedTerracottaBlockPool.stairs(ModBlocks.BROWN_GLAZED_TERRACOTTA_STAIR);
        brownGlazedTerracottaBlockPool.wall(ModBlocks.BROWN_GLAZED_TERRACOTTA_WALL);
        redGlazedTerracottaBlockPool.slab(ModBlocks.RED_GLAZED_TERRACOTTA_SLAB);
        redGlazedTerracottaBlockPool.stairs(ModBlocks.RED_GLAZED_TERRACOTTA_STAIR);
        redGlazedTerracottaBlockPool.wall(ModBlocks.RED_GLAZED_TERRACOTTA_WALL);
        orangeGlazedTerracottaBlockPool.slab(ModBlocks.ORANGE_GLAZED_TERRACOTTA_SLAB);
        orangeGlazedTerracottaBlockPool.stairs(ModBlocks.ORANGE_GLAZED_TERRACOTTA_STAIR);
        orangeGlazedTerracottaBlockPool.wall(ModBlocks.ORANGE_GLAZED_TERRACOTTA_WALL);
        yellowGlazedTerracottaBlockPool.slab(ModBlocks.YELLOW_GLAZED_TERRACOTTA_SLAB);
        yellowGlazedTerracottaBlockPool.stairs(ModBlocks.YELLOW_GLAZED_TERRACOTTA_STAIR);
        yellowGlazedTerracottaBlockPool.wall(ModBlocks.YELLOW_GLAZED_TERRACOTTA_WALL);
        limeGlazedTerracottaBlockPool.slab(ModBlocks.LIME_GLAZED_TERRACOTTA_SLAB);
        limeGlazedTerracottaBlockPool.stairs(ModBlocks.LIME_GLAZED_TERRACOTTA_STAIR);
        limeGlazedTerracottaBlockPool.wall(ModBlocks.LIME_GLAZED_TERRACOTTA_WALL);
        greenGlazedTerracottaBlockPool.slab(ModBlocks.GREEN_GLAZED_TERRACOTTA_SLAB);
        greenGlazedTerracottaBlockPool.stairs(ModBlocks.GREEN_GLAZED_TERRACOTTA_STAIR);
        greenGlazedTerracottaBlockPool.wall(ModBlocks.GREEN_GLAZED_TERRACOTTA_WALL);
        cyanGlazedTerracottaBlockPool.slab(ModBlocks.CYAN_GLAZED_TERRACOTTA_SLAB);
        cyanGlazedTerracottaBlockPool.stairs(ModBlocks.CYAN_GLAZED_TERRACOTTA_STAIR);
        cyanGlazedTerracottaBlockPool.wall(ModBlocks.CYAN_GLAZED_TERRACOTTA_WALL);
        lightBlueGlazedTerracottaBlockPool.slab(ModBlocks.LIGHT_BLUE_GLAZED_TERRACOTTA_SLAB);
        lightBlueGlazedTerracottaBlockPool.stairs(ModBlocks.LIGHT_BLUE_GLAZED_TERRACOTTA_STAIR);
        lightBlueGlazedTerracottaBlockPool.wall(ModBlocks.LIGHT_BLUE_GLAZED_TERRACOTTA_WALL);
        blueGlazedTerracottaBlockPool.slab(ModBlocks.BLUE_GLAZED_TERRACOTTA_SLAB);
        blueGlazedTerracottaBlockPool.stairs(ModBlocks.BLUE_GLAZED_TERRACOTTA_STAIR);
        blueGlazedTerracottaBlockPool.wall(ModBlocks.BLUE_GLAZED_TERRACOTTA_WALL);
        purpleGlazedTerracottaBlockPool.slab(ModBlocks.PURPLE_GLAZED_TERRACOTTA_SLAB);
        purpleGlazedTerracottaBlockPool.stairs(ModBlocks.PURPLE_GLAZED_TERRACOTTA_STAIR);
        purpleGlazedTerracottaBlockPool.wall(ModBlocks.PURPLE_GLAZED_TERRACOTTA_WALL);
        magentaGlazedTerracottaBlockPool.slab(ModBlocks.MAGENTA_GLAZED_TERRACOTTA_SLAB);
        magentaGlazedTerracottaBlockPool.stairs(ModBlocks.MAGENTA_GLAZED_TERRACOTTA_STAIR);
        magentaGlazedTerracottaBlockPool.wall(ModBlocks.MAGENTA_GLAZED_TERRACOTTA_WALL);
        pinkGlazedTerracottaBlockPool.slab(ModBlocks.PINK_GLAZED_TERRACOTTA_SLAB);
        pinkGlazedTerracottaBlockPool.stairs(ModBlocks.PINK_GLAZED_TERRACOTTA_STAIR);
        pinkGlazedTerracottaBlockPool.wall(ModBlocks.PINK_GLAZED_TERRACOTTA_WALL);
    }

    @Override
    public void generateItemModels(ItemModelGenerator itemModelGenerator) {
        itemModelGenerator.register(ModItems.ATTRIBUTE_CORE, Models.GENERATED);
        itemModelGenerator.register(ModItems.ATTRIBUTE_CORE_EXTRA_HEARTS, Models.GENERATED);
        itemModelGenerator.register(ModItems.ATTRIBUTE_CORE_GRAVITY, Models.GENERATED);
        itemModelGenerator.register(ModItems.ATTRIBUTE_CORE_SCALED, Models.GENERATED);
        itemModelGenerator.register(ModItems.ATTRIBUTE_CORE_SPICY, Models.GENERATED);
        itemModelGenerator.register(ModItems.ATTRIBUTE_CORE_SPIKES, Models.GENERATED);
        itemModelGenerator.register(ModItems.HEART, Models.GENERATED);
        itemModelGenerator.register(ModItems.INFINITE_POTATO, Models.GENERATED);
        itemModelGenerator.register(ModItems.WEATHER_ITEM, Models.GENERATED);
        itemModelGenerator.register(ModItems.ROTTEN_CHUNK, Models.GENERATED);
        itemModelGenerator.register(ModItems.LOOTBOX, Models.GENERATED);
        itemModelGenerator.register(ModItems.HARDENED_NETHERITE_INGOT, Models.GENERATED);
        itemModelGenerator.registerArmor((ModItems.HARDENED_NETHERITE_HELMET), ModArmorMaterials.HARDENED_NETHERITE_KEY, ItemModelGenerator.HELMET_TRIM_ID_PREFIX, false);
        itemModelGenerator.registerArmor((ModItems.HARDENED_NETHERITE_CHESTPLATE), ModArmorMaterials.HARDENED_NETHERITE_KEY, ItemModelGenerator.CHESTPLATE_TRIM_ID_PREFIX, false);
        itemModelGenerator.registerArmor((ModItems.HARDENED_NETHERITE_LEGGINGS), ModArmorMaterials.HARDENED_NETHERITE_KEY, ItemModelGenerator.LEGGINGS_TRIM_ID_PREFIX, false);
        itemModelGenerator.registerArmor((ModItems.HARDENED_NETHERITE_BOOTS), ModArmorMaterials.HARDENED_NETHERITE_KEY, ItemModelGenerator.BOOTS_TRIM_ID_PREFIX, false);
        itemModelGenerator.register(ModItems.FLUTE, Models.GENERATED);
        itemModelGenerator.register(ModItems.GRAVITY_SHARD, Models.GENERATED);
        itemModelGenerator.register(ModItems.TP_STICK, Models.GENERATED);
        itemModelGenerator.register(ModItems.LIGHTNING_STICK, Models.GENERATED);
        itemModelGenerator.register(ModItems.ICEBOMB, Models.GENERATED);
        itemModelGenerator.register(ModItems.THROWABLE_FIRECHARGE, Models.GENERATED);
        itemModelGenerator.register(ModItems.STRONG_THROWABLE_FIRECHARGE, Models.GENERATED);
        itemModelGenerator.register(ModItems.SUPER_STRONG_THROWABLE_FIRECHARGE, Models.GENERATED);
        itemModelGenerator.register(ModItems.SUPER_FERTILIZER, Models.GENERATED);
        itemModelGenerator.register(ModItems.ILLUSIONER_ESSENCE, Models.GENERATED);
        itemModelGenerator.register(ModItems.GILDED_ILLUSIONER_ESSENCE, Models.GENERATED);
        itemModelGenerator.register(ModItems.EFFECT_GEM, Models.GENERATED);
        itemModelGenerator.register(ModItems.EFFECT_GEM_HASTE, Models.GENERATED);
        itemModelGenerator.register(ModItems.EFFECT_GEM_WATER_BREATHING, Models.GENERATED);
        itemModelGenerator.register(ModItems.EFFECT_GEM_SLOW_FALLING, Models.GENERATED);
        itemModelGenerator.register(ModItems.EFFECT_GEM_STRENGTH, Models.GENERATED);
        itemModelGenerator.register(ModItems.EFFECT_GEM_FIRE_RESISTANCE, Models.GENERATED);
        itemModelGenerator.register(ModItems.EFFECT_GEM_JUMP_BOOST, Models.GENERATED);
        itemModelGenerator.register(ModItems.EFFECT_GEM_SPEED, Models.GENERATED);
        itemModelGenerator.register(ModItems.EFFECT_GEM_PUSH, Models.GENERATED);
        itemModelGenerator.register(ModItems.HAMMER, Models.GENERATED);
        itemModelGenerator.register(ModItems.ICEBLAZE_SPAWN_EGG, Models.GENERATED);
        itemModelGenerator.register(ModItems.HARDENED_NETHERITE_PICKAXE, Models.GENERATED);
        itemModelGenerator.register(ModItems.HARDENED_NETHERITE_SWORD, Models.GENERATED);
        itemModelGenerator.register(ModItems.HARDENED_NETHERITE_AXE, Models.GENERATED);
        itemModelGenerator.register(ModItems.HARDENED_NETHERITE_SHOVEL, Models.GENERATED);
        itemModelGenerator.register(ModItems.HARDENED_NETHERITE_HOE, Models.GENERATED);
        itemModelGenerator.register(ModItems.ASH, Models.GENERATED);
        itemModelGenerator.register(ModItems.HONEY_KEY, Models.GENERATED);
        itemModelGenerator.register(ModItems.HONEY_KEY_CLEAN, Models.GENERATED);
        itemModelGenerator.register(ModItems.BIOME_COMPASS, Models.GENERATED);
        itemModelGenerator.register(ModItems.PIZZAPOST_HEAD_ITEM, Models.GENERATED);
        itemModelGenerator.register(ModItems.FAT, Models.GENERATED);
        itemModelGenerator.register(ModItems.SOAP, Models.GENERATED);
        itemModelGenerator.register(ModItems.ICE_BLAZE_ROD, Models.GENERATED);
        itemModelGenerator.register(ModItems.TIME_CONTROL_DEVICE, Models.GENERATED);
        itemModelGenerator.register(ModItems.TIME_CONTROL_DEVICE_PIECE, Models.GENERATED);
        itemModelGenerator.register(ModItems.END_CRYSTAL_MOB_SPAWN_EGG, Models.GENERATED);
    }
}
